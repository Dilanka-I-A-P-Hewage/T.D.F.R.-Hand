//Index and Middle Fingers with force calibrations.

#include <PID_v1.h>
#include <Servo.h>

//Thumb
Servo t1;
Servo t2;
Servo t3;
Servo t4;
Servo t5;
Servo t6;

//Index
Servo i1;
Servo i2;
Servo i3;
Servo i4;
Servo i5;
Servo i6;

//Middle
Servo m1;
Servo m2;
Servo m3;
Servo m4;
Servo m5;
Servo m6;

//Ring
Servo r1;
Servo r2;
Servo r3;
Servo r4;
Servo r5;
Servo r6;

//Little
Servo l1;
Servo l2;
Servo l3;
Servo l4;
Servo l5;
Servo l6;

//Flex Sensor ADC
const int flexThumb = A0;
const int flexIndex = A1;
const int flexMid = A2;
const int flexRing = A3;
const int flexLittle = A4;

//Stress Sensor ADC

const int stressSenseT1 = A5;
const int stressSenseT2 = A6;
const int stressSenseT3 = A7;
const int stressSenseT4 = A8;
const int stressSenseT5 = A9;
const int stressSenseT6 = A10;

const int stressSenseI1 = A11;
const int stressSenseI2 = A12;
const int stressSenseI3 = A13;
const int stressSenseI4 = A14;
const int stressSenseI5 = A15;

//Now on I2C activates
const int stressSenseI6 = Ai16;

const int stressSenseM1 = Ai17;
const int stressSenseM2 = Ai18;
const int stressSenseM3 = Ai19;
const int stressSenseM4 = Ai20;
const int stressSenseM5 = Ai21;
const int stressSenseM6 = Ai22;

const int stressSenseR1 = Ai23;
const int stressSenseR2 = Ai24;
const int stressSenseR3 = Ai25;
const int stressSenseR4 = Ai26;
const int stressSenseR5 = Ai27;
const int stressSenseR6 = Ai28;

const int stressSenseL1 = Ai29;
const int stressSenseL2 = Ai30;
const int stressSenseL3 = Ai31;
const int stressSenseL4 = Ai32;
const int stressSenseL5 = Ai33;
const int stressSenseL6 = Ai34;

void setup()
{
  Serial.begin(9600);

  m1.attach(2);
  m2.attach(3);
  m3.attach(4);
  m3.attach(5);
  m4.attach(6);
  m5.attach(7);

  i1.attach(8);
  i2.attach(9);
  i3.attach(10);
  i3.attach(11);
  i4.attach(12);
  i5.attach(13);
  
  r1.attach(44);
  r2.attach(45);
  r3.attach(46);
  
  //I2C begins
  r4.attach(i2);
  r5.attach(i3);
  r6.attach(i4);

  t1.attach(i5);
  t2.attach(i6);
  t3.attach(i7);
  t3.attach(i8);
  t4.attach(i9);
  t5.attach(i10);
  
  l1.attach(i11);
  l2.attach(i12);
  l3.attach(i13);
  l3.attach(i14);
  l4.attach(i15);
  l5.attach(i16);
}

//PD Controller input variables 
//Flex Sensors
double SetpointT, InputT, OutputT, SetpointTO, OutputTO;
double SetpointI, InputI, OutputI, SetpointIO, OutputIO;
double SetpointM, InputM, OutputM, SetpointMO, OutputMO;
double SetpointR, InputR, OutputR, SetpointRO, OutputRO;
double SetpointL, InputL, OutputL, SetpointLO, OutputLO;

//Stress Sensors
double Setpointt1, Inputt1, Outputt1, SetpointT1, OutputT1;
double Setpointt2, Inputt2, Outputt2, SetpointT2, OutputT2;
double Setpointt3, Inputt3, Outputt3, SetpointT3, OutputT3;
double Setpointt4, Inputt4, Outputt4, SetpointT4, OutputT4;
double Setpointt5, Inputt5, Outputt5, SetpointT5, OutputT5;
double Setpointt6, Inputt6, Outputt6, SetpointT6, OutputT6;

double Setpointi1, Inputi1, Outputi1, SetpointI1, OutputI1;
double Setpointi2, Inputi2, Outputi2, SetpointI2, OutputI2;
double Setpointi3, Inputi3, Outputi3, SetpointI3, OutputI3;
double Setpointi4, Inputi4, Outputi4, SetpointI4, OutputI4;
double Setpointi5, Inputi5, Outputi5, SetpointI5, OutputI5;
double Setpointi6, Inputi6, Outputi6, SetpointI6, OutputI6;

double Setpointm1, Inputm1, Outputm1, SetpointM1, OutputM1;
double Setpointm2, Inputm2, Outputm2, SetpointM2, OutputM2;
double Setpointm3, Inputm3, Outputm3, SetpointM3, OutputM3;
double Setpointm4, Inputm4, Outputm4, SetpointM4, OutputM4;
double Setpointm5, Inputm5, Outputm5, SetpointM5, OutputM5;
double Setpointm6, Inputm6, Outputm6, SetpointM6, OutputM6;

double Setpointr1, Inputr1, Outputr1, SetpointR1, OutputR1;
double Setpointr2, Inputr2, Outputr2, SetpointR2, OutputR2;
double Setpointr3, Inputr3, Outputr3, SetpointR3, OutputR3;
double Setpointr4, Inputr4, Outputr4, SetpointR4, OutputR4;
double Setpointr5, Inputr5, Outputr5, SetpointR5, OutputR5;
double Setpointr6, Inputr6, Outputr6, SetpointR6, OutputR6;

double Setpointl1, Inputl1, Outputl1, SetpointL1, OutputL1;
double Setpointl2, Inputl2, Outputl2, SetpointL2, OutputL2;
double Setpointl3, Inputl3, Outputl3, SetpointL3, OutputL3;
double Setpointl4, Inputl4, Outputl4, SetpointL4, OutputL4;
double Setpointl5, Inputl5, Outputl5, SetpointL5, OutputL5;
double Setpointl6, Inputl6, Outputl6, SetpointL6, OutputL6;

//Pre-calculated Kp, Ki, Kd values
double calcKp = 0.5, calcKi = 0.0, calcKd = 3.0;

void loop()
{
  // Input value from the analog pin:
  int flexPosThumb;
  int flexPosLittle;
  int flexPosIndex;
  int flexPosMid;
  int flexPosRing;

  // Mapped value from input value:
  int mapPosThumb;
  int mapPosLittle;
  int mapPosIndex;
  int mapPosMid;
  int mapPosRing;

  //Servo Positions:
  int i1Pos;
  int i2Pos;
  int i3Pos;
  int i4Pos;
  int i5Pos;
  int i6Pos;

  int m1Pos;
  int m2Pos;
  int m3Pos;
  int m4Pos;
  int m5Pos;
  int m6Pos;
  
  int t1Pos;
  int t2Pos;
  int t3Pos;
  int t4Pos;
  int t5Pos;
  int t6Pos;

  int r1Pos;
  int r2Pos;
  int r3Pos;
  int r4Pos;
  int r5Pos;
  int r6Pos;
  
  int l1Pos;
  int l2Pos;
  int l3Pos;
  int l4Pos;
  int l5Pos;
  int l6Pos;

  // Read the position of the flex sensor (0 to 1023):
  flexPosIndex = analogRead(flexIndex);
  flexPosMid = analogRead(flexMid);
  flexPosRing = analogRead(flexRing);
  flexPosLittle = analogRead(flexLittle);
  flexPosThumb = analogRead(flexThumb);

  // Mapping
  mapPosIndex = map(flexPosIndex, 110, 300, 0, 140);
  mapPosMid = map(flexPosMid, 300, 110, 0, 140);
  mapPosRing = map(flexPosRing, 110, 300, 0, 140);
  mapPosLittle = map(flexPosLittle, 300, 110, 0, 140);
  mapPosThumb = map(flexPosThumb, 110, 300, 0, 140);

 //Servo PWM constrains
  i1Pos = constrain(mapPosIndex, 10, 140);
  i2Pos = constrain(mapPosIndex, 10, 110);
  i3Pos = constrain(mapPosIndex, 10, 140);
  i4Pos = constrain(mapPosIndex, 10, 140);
  i5Pos = constrain(mapPosIndex, 10, 140);
  i6Pos = constrain(mapPosIndex, 10, 140);

  m1Pos = constrain(mapPosMid, 10, 100);
  m2Pos = constrain(mapPosMid, 10, 140);
  m3Pos = constrain(mapPosMid, 10, 140);
  m4Pos = constrain(mapPosMid, 10, 140);
  m5Pos = constrain(mapPosMid, 10, 170);
  m6Pos = constrain(mapPosMid, 10, 140);

  // Now we'll command the servo to move to that position:
  i1.write(i1Pos);
  i2.write(i2Pos);
  i3.write(i3Pos);
  i4.write(i4Pos);
  i5.write(i5Pos);
  i6.write(i6Pos);

  m1.write(m1Pos);
  m2.write(m2Pos);
  m3.write(m3Pos);
  m4.write(m4Pos);
  m5.write(m5Pos);
  m6.write(m6Pos);
  
  t1.write(t1Pos);
  t2.write(t2Pos);
  t3.write(t3Pos);
  t4.write(t4Pos);
  t5.write(t5Pos);
  t6.write(t6Pos);

  r1.write(r1Pos);
  r2.write(r2Pros);
  r3.write(r3Pos);
  r4.write(r4Pos);
  r5.write(r5Pos);
  r6.write(r6Pos);
  
  l1.write(l1Pos);
  l2.write(l2Pros);
  l3.write(l3Pos);
  l4.write(l4Pos);
  l5.write(l5Pos);
  l6.write(l6Pos);

  delay(20);  // wait 20ms between servo updates
}
